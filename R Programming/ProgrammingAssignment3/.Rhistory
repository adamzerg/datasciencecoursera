A <- 9999999999
A <- 1:9999999999
A1 <- makeVector(A)
cachemean <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
A1 <- makeVector(A)
cachemean(A1)
cachemean(A1)
cachemean(A1)
source('~/GitHub/ProgrammingAssignment2/cachematrix.R')
A <- matrix(c(1:10),5,2)
A
A1 <- makeCahseMatrix(A)
A1 <- makeCasheMatrix(A)
A1 <- makeCacheMatrix(A)
cacheSolve(A1)
A1
cacheSolve(A1)
solve(A)
A <- matrix(c(1:9),3,3)
A
solve(A)
A1 <- makeCacheMatrix(A)
cacheSolve(A1)
A <- matrix(c(30:33),2,2)
A
solve(A)
A1 <- makeCacheMatrix(A)
cacheSolve(A1)
source('~/GitHub/ProgrammingAssignment2/cachematrix.R')
A1 <- makeCacheMatrix(A)
cacheSolve(A1)
source('~/GitHub/ProgrammingAssignment2/cachematrix.R')
A1 <- makeCacheMatrix(A)
cacheSolve(A1)
solve(A)
source('~/GitHub/ProgrammingAssignment2/cachematrix.R')
source('~/GitHub/datasciencecoursera/R workspace/cachematrix.R')
A1 <- makeCacheMatrix(A)
cacheSolve(A1)
solve(A)
solve(A)
solve(A)
solve(A)
source('~/GitHub/datasciencecoursera/R workspace/cachematrix.R')
A1 <- makeCacheMatrix(A)
cacheSolve(A1)
source('~/GitHub/datasciencecoursera/R workspace/cachematrix.R')
A1 <- makeCacheMatrix(A)
cacheSolve(A1)
source('~/GitHub/datasciencecoursera/R workspace/cachematrix.R')
A1 <- makeCacheMatrix(A)
cacheSolve(A1)
source('~/GitHub/datasciencecoursera/R workspace/cachematrix.R')
set.seed(1)
rpois(5, 2)
set.seed(1)
rpois(5, 2)
set.seed(1)
rpois(5, 2)
?ppois
?ppois
set.seed(1)
rpois(5, 2)
set.seed(1)
dpois(5, 2)
set.seed(1)
qpois(5, 2)
set.seed(1)
ppois(5, 2)
set.seed(10)
x <- rep(0:1, each = 5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
x
e
set.seed(10)
x <- rep(0:1, each = 5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
e
set.seed(10)
x <- rep(0:1, each = 5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
e
plot(e)
plot(x,y)
?rbinorm
?rbinom
library(datasets)
Rprof()
fit <- lm(y ~ x1 + x2)
Rprof(NULL)
swirl()
swirl()
library(swirl)
swirl()
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
nmaes(plants)
names(plants)
head()
head(plants)
head(plants, 10)
tail(plants, 154)
tail(plants, 15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6, 4, replace = TRUE)
sample(1:6, 4, replace = TRUE)
sample(1:6, 4)
sample(1:20, 10)
LETTER
LETTERS
sample(LETTERS)
prob = c(0.3, 0.7)
flips <- prob = c(0.3, 0.7)
flips <- sample(c(0,1), 100, replace = TRUE, prob = c(0.3, 0.7))
flips
sum(flips)
?rbinom
rbinom(1, size = 100, prob = 0.7)
flips2 <- rbinom(1, size = 100, prob = 0.7)
flips2 <- rbinom(100, size = 1, prob = 0.7)
flips2
sum(flips2)
?rnorm()
?rnorm
rnorm(10)
rnorm(10, mean != 100, sd != 25)
rnorm(10, mean = 100, sd = 25)
?rpois
rpois(5, mean = 10)
rpois(5)
rpois(5, 10)
my_pois <- replicate(100, rpois(5, 10))
my_pois
my_pois <- colMeans(my_pois)
cm <- colMeans(my_pois)
cm
hist(cm)
data(cars)
?cars
head(cars)
plot(cars)
?plot
plot(x = car$sppeed, y=cars$dist)
plot(x = cars$sppeed, y=cars$dist)
plot(x = cars$speed, y=cars$dist)
plot(cars)
plot(x = cars$dist, y = cars$speed)
plot(x = cars$speed, y=cars$dist)
plot(x = cars$speed, y=cars$dist, xlab = "Speed")
plot(x = cars$speed, y=cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(x = cars$speed, y=cars$dist, ylab = "Stopping Distance")
plot(x = cars$speed, y=cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(x = cars$speed, y=cars$dist, xlab = "Speed", ylab = "Stopping Distance", main = "My Plot")
plot(cars, main = "My Plot")
plot(cars, main = "My Plot", subtitle = "My Plot Subtitle")
plot(cars, sub = "My Plot Subtitle")
plot(cars, col = 2)
plot(cars, xlim = c(10,15))
plot(cars, pch = 2)
mtcars
data(mtcars)
play()
plot(cars, main = "My Plot", sub = "My Plot Subtitle")
hist(cm)
dim(mtcars)
head(mtcars, 10)
rpois(5, 10)
rpois(5, 10)
set.seed(10)
rpois(5, 10)
set.seed(10)
rpois(5, 10)
rpois(5, 10)
rpois(5, 10)
rpois(5, 10)
set.seed(10)
set.seed(10)
rpois(5, 10)
nxt()
?boxplot()
?boxplot
boxplot(mpg ~ cyl, mtcars)
hist(mtcars$mpg)
getwd()
setwd(..)
setwd(D:/Documents/GitHub/datasciencecoursera/)
setwd(D:/Documents/GitHub/datasciencecoursera)
setwd()
dir
setwd("~/GitHub/datasciencecoursera")
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
setwd("~/GitHub/datasciencecoursera/ProgrammingAssignment3")
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
head(outcome)
ncol(outcome)
names(outcome)
outcome[, 11] <- as.numeric(outcome[, 11])
hist(outcome[, 11])
source('~/GitHub/datasciencecoursera/ProgrammingAssignment3/best.R')
source('~/GitHub/datasciencecoursera/ProgrammingAssignment3/best.R')
best('DC','heart attack')
best("TX", "heart attack")
best("TX", "heart failure")
best("MD", "heart failure")
best("MD", "heart attachk")
best("MD", "heart attack")
best("MD", "pneumonia")
best("BB", "pneumonia")
best("NY", "pneumonia")
best("NY", "pnmonia")
source('~/GitHub/datasciencecoursera/ProgrammingAssignment3/best.R')
source('~/GitHub/datasciencecoursera/ProgrammingAssignment3/rankhospital.R')
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
data[state, 7]
data[7, 11]
head(data)
data[7, 11]
data[, c(7,11)]
data[1:10, c(7,11)]
na.omit(data[1:10, c(7,11)])
na.omit(data[1:10, as.numeric(c(7,11))])
na.omit(as.numeric(data[1:10, c(7,11)])
)
na.omit(as.numeric(data[1:10, c(7,11)]))
na.omit(as.numeric(data[1:10, 11]))
na.omit(as.numeric(data[2:10, 11]))
as.numeric(data[2:10, 11])
na.omit(as.numeric(data[2:10, 11]))
order(data[,11], data[,7])
o <- order(data[,11], data[,7])
o
head(o, 100)
data[,11]
data[,7]
head(o, 100)
?order
o <- order(data[,11])
head(o, 100)
source('~/GitHub/datasciencecoursera/ProgrammingAssignment3/rankhospital.R')
rankhospital("TX", "heart failure", 4)
source('~/GitHub/datasciencecoursera/ProgrammingAssignment3/rankhospital.R')
rankhospital("TX", "heart failure", 4)
source('~/GitHub/datasciencecoursera/ProgrammingAssignment3/rankhospital.R')
source('~/GitHub/datasciencecoursera/ProgrammingAssignment3/rankhospital.R')
rankhospital("TX", "heart failure", 4)
rankhospital("MD", "heart attack", "worst")
rankhospital("MN", "heart attack", 5000)
source('~/GitHub/datasciencecoursera/ProgrammingAssignment3/rankhospital.R')
source('~/GitHub/datasciencecoursera/ProgrammingAssignment3/rankall.R')
data[,11]
head(o, 100)
data[,11]
data[o, ][3, 1]
data[o, ][3, 7]
data[o, ][3, 3]
data[o, ][3, 2]
source('~/GitHub/datasciencecoursera/ProgrammingAssignment3/rankall.R')
head(rankall("heart attack", 20), 10)
tail(rankall("pneumonia", "worst"), 3)
tail(rankall("heart failure"), 10)
best("SC", "heart attack")
best("NY", "pneumonia")
best("AK", "pneumonia")
rankhospital("NC", "heart attack", "worst")
rankhospital("WA", "heart attack", 7)
rankhospital("TX", "pneumonia", 10)
rankhospital("NY", "heart attack", 7)
r <- rankall("heart attack", 4)
as.character(subset(r, state == "HI")$hospital)
r
r <- rankall("pneumonia", "worst")
as.character(subset(r, state == "NJ")$hospital)
r <- rankall("heart failure", 10)
as.character(subset(r, state == "NV")$hospital)
